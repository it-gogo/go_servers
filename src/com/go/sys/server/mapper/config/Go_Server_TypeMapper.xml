<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.go.sys.server.mapper.IGo_Server_TypeMapper">
    <insert id="insert" parameterType="Go_Server_Type">
    	<selectKey keyProperty="id" resultType="int" order="AFTER">
	        SELECT LAST_INSERT_ID() AS id
	    </selectKey>
	    insert into Go_Server_Type(code,pid,name,isactives)
	    values(#{code},#{pid},#{order},#{name},#{isactives})
	</insert>
	<update id="update">
	    update Go_Server_Type 
		    set code = #{code},
		    pid = #{pid},
		    name=#{name},
		    isactives=#{isactives}
	</update>
	<delete id="delete" parameterType="string">
	    delete from Go_Server_Type where id= #{id}
	</delete>
	<update id="updateField" parameterType="map">
	    update Go_Server_Type
	    ${set_sql}
	</update>
	<select id="getScale" parameterType="map" resultType="Object">
	    select ${column} from Go_Server_Type 
	    ${where}
	    limit 1 , 0
	</select>
	<select id="select" resultType="Go_Server_Type">
	    select * from Go_Server_Type
	</select>
	<select id="selectByParams" resultType="Go_Server_Type" parameterType="map">
	    select * from Go_Server_Type ${where} 
	</select>
	<select id="selectByPage" parameterType="Go_PageData" resultType="Go_Server_Type">
	    select * from Go_Server_Type 
	    limit ${pageSize} offset ${(currentPage - 1) * pageSize}
	</select>
	<select id="selectPageByParams" parameterType="map" resultType="Go_Server_Type">
	    select Go_Server_Type.* from Go_Server_Type 
	    ${where} 
	    limit ${pageData.pageSize} offset ${(pageData.currentPage - 1) * pageData.pageSize}
	</select>
	<select id="count" parameterType="map" resultType="int">
	    select count(Go_Server_Type.id) from Go_Server_Type
	     ${where}
	</select>
	<select id="get" parameterType="string" resultType="Go_Server_Type">
	    select * from Go_Server_Type where id = #{id}
	</select>
	
	<select id="getDataByExtension" parameterType="map" resultType="Go_Server_Type">
		select * from Go_Server_Type where type_id=(
			select id from go_common_type where extension='${extension}'
		)
	</select>
	
</mapper>
