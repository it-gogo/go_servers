<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.go.sys.server.mapper.IGo_Server_InfoMapper">
    <insert id="insert" parameterType="Go_Server_Info">
    	<selectKey keyProperty="id" resultType="int" order="AFTER">
	        SELECT LAST_INSERT_ID() AS id
	    </selectKey>
	    insert into Go_Server_Info(AREAID,SERVERTYPEID,NAME,CPU,MEMORY,DISK,
	    BACKUPS,FLOW,NETFAST,IPNUM,PORT,OPERATIONSYSTEMID,CONTROLPANELID,IMGURL,
	    BUY_TIMES,DESCRIPTION,`STATUS`)
	    values
	    (
	    #{AREA_ID},#{SERVER_TYPE_ID},#{NAME},#{CPU},#{MEMORY},#{DISK},#{BACKUPS},#{FLOW},#{NET_FAST},#{IP_NUM},#{PORT},#{OPERATION_SYSTEM_ID},
	    #{CONTROL_PANEL_ID},#{IMG_URL},#{BUY_TIMES},#{DESCRIPTION},#{STATUS}
	    )
	</insert>
	<update id="update">
	    update Go_Server_Info 
		    set 
		    AREAID=#{AREA_ID},
		    SERVERTYPEID=#{SERVER_TYPE_ID},
		    NAME=#{NAME},
		    CPU=#{CPU},
		    MEMORY=#{MEMORY},
		    DISK=#{DISK},
	    	BACKUPS=#{BACKUPS},
	    	FLOW=#{FLOW},
	    	NETFAST=#{NET_FAST},
	    	IPNUM=#{IP_NUM},
	    	PORT=#{PORT},
	    	OPERATIONSYSTEMID=#{OPERATION_SYSTEM_ID},
	    	CONTROLPANELID=#{CONTROL_PANEL_ID},
	    	IMGURL=#{IMG_URL},
	   		BUY_TIMES=#{BUY_TIMES},
	   		DESCRIPTION=#{DESCRIPTION},
	   		`STATUS`=#{STATUS}
		    where id = #{id}
	</update>
	<delete id="delete" parameterType="string">
	    delete from Go_Server_Info where id= #{id}
	</delete>
	<update id="updateField" parameterType="map">
	    update Go_Server_Info
	    ${set_sql}
	</update>
	<select id="getScale" parameterType="map" resultType="Object">
	    select ${column} from Go_Server_Info 
	    ${where}
	    limit 1 , 0
	</select>
	<select id="select" resultType="Go_Server_Info">
	    select * from Go_Server_Info
	</select>
	<select id="selectByParams" resultType="Go_Server_Info" parameterType="map">
	    select * from Go_Server_Info ${where} 
	</select>
	<select id="selectByPage" parameterType="Go_PageData" resultType="Go_Server_Info">
	    select * from Go_Server_Info 
	    limit ${pageSize} offset ${(currentPage - 1) * pageSize}
	</select>
	<select id="selectPageByParams" parameterType="map" resultType="Go_Server_Info">
	    select Go_Server_Info.* from Go_Server_Info 
	    ${where} 
	    limit ${pageData.pageSize} offset ${(pageData.currentPage - 1) * pageData.pageSize}
	</select>
	<select id="count" parameterType="map" resultType="int">
	    select count(Go_Server_Info.id) from Go_Server_Info
	     ${where}
	</select>
	<select id="get" parameterType="string" resultType="Go_Server_Info">
	    select * from Go_Server_Info where id = #{id}
	</select>
	
</mapper>