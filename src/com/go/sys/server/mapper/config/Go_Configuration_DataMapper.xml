<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.go.sys.server.mapper.IGo_Configuration_DataMapper">
    <insert id="insert" parameterType="Go_Configuration_Data">
    	<selectKey keyProperty="id" resultType="int" order="AFTER">
	        SELECT LAST_INSERT_ID() AS id
	    </selectKey>
	    insert into Go_Configuration_Data(type,name,seq,price,typename,description,isactives)
	    values(#{type},#{name},#{seq},#{price},#{typename},#{description},#{isactives})
	</insert>
	<update id="update">
	    update Go_Configuration_Data 
		    set type = #{type},
		    name = #{name},
		    seq = #{seq},
		    price = #{price},
		    typename = #{typename},
		    description = #{description},
		    isactives = #{isactives}
		    where id = #{id}
	</update>
	<delete id="delete" parameterType="string">
	    delete from Go_Configuration_Data where id= #{id}
	</delete>
	<delete id="deleteList" parameterType="map">
	    delete from Go_Configuration_Data ${where}
	</delete>
	<update id="updateField" parameterType="map">
	    update Go_Configuration_Data
	    ${set_sql}
	</update>
	<select id="getScale" parameterType="map" resultType="Object">
	    select ${column} from Go_Configuration_Data 
	    ${where}
	    limit 1 offset 0
	</select>
	<select id="select" resultType="Go_Configuration_Data">
	    select * from Go_Configuration_Data
	</select>
	<select id="selectByParams" resultType="Go_Configuration_Data" parameterType="map">
	    select * from Go_Configuration_Data ${where} 
	</select>
	<select id="selectByPage" parameterType="Go_PageData" resultType="Go_Configuration_Data">
	    select * from Go_Configuration_Data 
	    limit ${pageSize} offset ${(currentPage - 1) * pageSize}
	</select>
	<select id="selectPageByParams" parameterType="map" resultType="Go_Configuration_Data">
	    select Go_Configuration_Data.* from Go_Configuration_Data 
	    ${where} 
	    limit ${pageData.pageSize} offset ${(pageData.currentPage - 1) * pageData.pageSize}
	</select>
	<select id="count" parameterType="map" resultType="int">
	    select count(Go_Configuration_Data.id) from Go_Configuration_Data
	     ${where}
	</select>
	<select id="get" parameterType="string" resultType="Go_Configuration_Data">
	    select * from Go_Configuration_Data where id = #{id}
	</select>
	
</mapper>